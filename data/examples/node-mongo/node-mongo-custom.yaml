tosca_definitions_version: tosca_simple_yaml_1_0

description: >
  TOSCA simple profile with wordpress, web server and mysql on the same server.

repositories:
  docker_hub: https://registry.hub.docker.com/

imports:
  # - tosker: https://di-unipi-socc.github.io/tosker-types/tosker.yaml
- tosker: ../../tosker-types.yaml

interface_types:
  app_interface:
    derived_from: tosca.interfaces.Root
    create:
      description: create the Software component
    add_examples:
      description: push tests data on the DB
    start:
      description: start the Software component
    stop:
      description: stop the Software component
    delete:
      description: delete the Software component
  language_interface:
    derived_from: tosca.interfaces.Root
    install:
      description: install a programming language
    uninstall:
      description: uninstall a programming language

node_types:
  AppSoftware:
    derived_from: tosker.nodes.Software
    requirements:
      - db_connection:
          capability: tosca.capabilities.Endpoint
          node: tosker.nodes.Root
          relationship: tosca.relationships.ConnectsTo
    interfaces:
      my_interface:
        type: app_interface
  NodeSoftware:
    derived_from: tosker.nodes.Software
    interfaces:
      my_interface:
        type: language_interface

topology_template:
  policies:
  - app_protocol:
      type: tosker.policies.Protocol
      targets: [ app ]
      properties:
        initial_state: deleted
        states:
          deleted:
          created:
          started:
            requires: [ host, db_connection ]
        transitions:
        - source: deleted
          target: created
          interface: my_interface
          operation: create
        - source: created
          target: deleted
          interface: my_interface
          operation: delete
        - source: created
          target: created
          requires: [ db_connection ]
          interface: my_interface
          operation: add_examples
        - source: created
          target: started
          interface: my_interface
          operation: start
        - source: started
          target: created
          interface: my_interface
          operation: stop
  - nodejs_protocol:
      type: tosker.policies.Protocol
      targets: [ node ]
      properties:
        initial_state: uninstalled
        states:
          installed:
            requires: [ host ]
            offers: [ host ]
          uninstalled:
        transitions:
        - source: uninstalled
          target: installed
          interface: my_interface
          operation: install
        - source: installed
          target: uninstalled
          interface: my_interface
          operation: uninstall

  node_templates:
    app:
      type: AppSoftware
      artifacts:
        code: code/app/main.js
        package: code/app/package.json
        test_data: code/app/test_data.json
      requirements:
        - host: node
        - db_connection: db
      interfaces:
        my_interface:
          create:
            implementation: scripts/app/install.sh
            inputs:
              package: { get_artifact: [ SELF, package ] }
              main: { get_artifact: [ SELF, code ] }
              data: { get_artifact: [ SELF, test_data ] }
          add_examples:
            implementation: scripts/app/add_examples.sh
          start:
            implementation: scripts/app/start.sh
            inputs:
              port: 80
          stop:
            implementation: scripts/app/stop.sh
          delete:
            implementation: scripts/app/delete.sh
            inputs:
              package: { get_artifact: [ SELF, package ] }
              main: { get_artifact: [ SELF, code ] }

    node:
      type: NodeSoftware
      requirements:
        - host: server_app
      interfaces:
        my_interface:
          install:
            implementation: scripts/node/install.sh
          uninstall:
            implementation: scripts/node/uninstall.sh

    db:
      type: tosker.nodes.Software
      requirements:
        - host: server_db
      interfaces:
        Standard:
          create:
            implementation: scripts/mongo/install.sh
          start:
            implementation: scripts/mongo/start.sh
          stop:
            implementation: scripts/mongo/stop.sh
          delete:
            implementation: scripts/mongo/delete.sh


    server_app:
      type: tosker.nodes.Container
      properties:
        ports:
          80: 8080
      artifacts:
        my_image:
          file: ubuntu:latest
          type: tosker.artifacts.Image
          repository: docker_hub

    server_db:
      type: tosker.nodes.Container
      artifacts:
        my_image:
          file: ubuntu:latest
          type: tosker.artifacts.Image
          repository: docker_hub
